function exponentialSearch(arr, x) {
  const n = arr.length;

  // If the element is present at the first position
  if (arr[0] === x) {
    return 0;
  }

  // Find the range for binary search
  let i = 1;
  while (i < n && arr[i] <= x) {
    i *= 2;
  }

  // Perform binary search within the determined range
  return binarySearch(arr, x, Math.floor(i / 2), Math.min(i, n - 1));
}

// Binary search function
function binarySearch(arr, x, start, end) {
  while (start <= end) {
    const mid = Math.floor((start + end) / 2);

    if (arr[mid] === x) {
      return mid;
    } else if (arr[mid] < x) {
      start = mid + 1;
    } else {
      end = mid - 1;
    }
  }

  // Element not found
  return -1;
}

// Example usage:
const array = [1, 2, 3, 4, 5, 6, 7, 8, 9];
const element = 6;
const index = exponentialSearch(array, element);
console.log(index); // Output: 5
